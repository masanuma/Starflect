import React, { useState } from 'react';
import './TutorialModal.css';

interface TutorialModalProps {
  isOpen: boolean;
  onClose: () => void;
}

const TutorialModal: React.FC<TutorialModalProps> = ({ isOpen, onClose }) => {
  const [currentStep, setCurrentStep] = useState(0);
  
  const tutorialSteps = [
    {
      title: "üåü Starflect„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ",
      content: "ÊôÆÈÄö„ÅÆÊòüÂ∫ßÂç†„ÅÑ„Çà„ÇäË©≥„Åó„Åè„ÄÅ„ÅÇ„Å™„Åü„Å†„Åë„ÅÆÂç†„ÅÑÁµêÊûú„ÅåÂàÜ„Åã„Çä„Åæ„Åô„ÄÇ\n4„Å§„ÅÆÂç†„ÅÑ„É¢„Éº„Éâ„Åã„ÇâÈÅ∏„Çì„Åß„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ",
      image: "‚ú®",
      highlight: ".mode-cards"
    },
    {
      title: "üåü „ÅäÊâãËªΩÊòüÂ∫ßÂç†„ÅÑ",
      content: "ÁîüÂπ¥ÊúàÊó•„Å†„Åë„Åß30Áßí„ÅßÂç†„Åà„Åæ„Åô„ÄÇ\nÈõëË™å„ÅÆÊòüÂ∫ßÂç†„ÅÑ„Çà„ÇäÂ∞ë„ÅóË©≥„Åó„ÅèÂàÜ„Åã„Çä„Åæ„Åô„ÄÇ\nËø∑„Å£„Åü„Çâ„Åì„Åì„Åã„ÇâÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜÔºÅ",
      image: "üåü",
      highlight: ".mode-card:first-child"
    },
    {
      title: "üåô‚ú® Ë©≥„Åó„ÅÑÊòüÂ∫ßÂç†„ÅÑ",
      content: "ÊôÇÂàª„Å®Â†¥ÊâÄ„ÇÇ‰Ωø„Å£„Å¶3ÂÄçË©≥„Åó„ÅèÂç†„ÅÑ„Åæ„Åô„ÄÇ\nÂêå„ÅòË™ïÁîüÊó•„Åß„ÇÇ„ÄÅÊúùÁîü„Åæ„Çå„Å®Â§úÁîü„Åæ„Çå„ÅßÁµêÊûú„ÅåÂ§â„Çè„ÇãÁ≤æÂØÜÂç†„ÅÑ„Åß„Åô„ÄÇ",
      image: "üåô‚ú®",
      highlight: ".mode-card:nth-child(2)"
    },
    {
      title: "üåå „Éó„É≠Á¥öÊòüÂ∫ßÂç†„ÅÑ",
      content: "ÂÖ®ÈÉ®„ÅÆÊòü„Çí‰Ωø„Å£„ÅüÊúÄÈ´òÁ≤æÂ∫¶„ÅÆÂç†„ÅÑ„Åß„Åô„ÄÇ\n„Éó„É≠„ÅÆÂç†ÊòüË°ìÂ∏´„É¨„Éô„É´„ÅÆË©≥Á¥∞ÂàÜÊûê„ÅåÂèó„Åë„Çâ„Çå„Åæ„Åô„ÄÇ",
      image: "üåå",
      highlight: ".mode-card:nth-child(3)"
    },
    {
      title: "ü§ñ AIÂç†„ÅÑÂ∏´„ÉÅ„É£„ÉÉ„Éà",
      content: "AIÂç†„ÅÑÂ∏´„Å®„ÉÅ„É£„ÉÉ„ÉàÂΩ¢Âºè„Åß‰ºöË©±„Åß„Åç„Åæ„Åô„ÄÇ\n„ÄåÊÅãÊÑõÈÅã„Å´„Å§„ÅÑ„Å¶Ë©≥„Åó„Åè„Äç„Äå‰ªï‰∫ã„ÅÆÊÇ©„Åø„Äç„Å™„Å©„ÄÅ‰Ωï„Åß„ÇÇÁõ∏Ë´á„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      image: "ü§ñ",
      highlight: ".mode-card:last-child"
    },
    {
      title: "üåå „Å™„ÅúË©≥„Åó„ÅèÂç†„Åà„Çã„ÅÆÔºü",
      content: "ÈõëË™å„ÅÆÊòüÂ∫ßÂç†„ÅÑ„ÅØ12Á®ÆÈ°û„Å†„Åë„Åß„Åô„Åå„ÄÅStarflect„ÅØÊï∞Áôæ‰∏áÈÄö„Çä„ÅÆÁµÑ„ÅøÂêà„Çè„ÅõÔºÅ\n\nüåô Êúà„ÅØÁ¥Ñ2ÊôÇÈñì„ÅßÊòüÂ∫ß„ÅåÂ§â„Çè„Çã\nÂêå„ÅòÊó•„Åß„ÇÇÊúù„Å®Â§ú„ÅßÊúàÊòüÂ∫ß„ÅåÈÅï„ÅÑ„Åæ„Åô\n\nüåÖ ‰∏äÊòáÊòüÂ∫ß„ÅØ4ÂàÜ„Åß1Â∫¶Â§â„Çè„Çã\nÂá∫ÁîüÊôÇÂàª„Åß„Äå‰∫∫„Åã„Çâ„ÅÆÂç∞Ë±°„Äç„ÅåÂ§â„Çè„Çä„Åæ„Åô\n\nüåå 10Â§©‰Ωì„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„ÅØËÜ®Â§ß\nÈõëË™åÂç†„ÅÑ„Å®„ÅØÊØî„ÅπÁâ©„Å´„Å™„Çâ„Å™„ÅÑÁ≤æÂ∫¶„Åß„Åô",
      image: "ü™ê",
      highlight: ""
    },
    {
      title: "‚≠ê Â§©‰ΩìÊòüÂ∫ß„Å£„Å¶‰ΩïÔºü",
      content: "Áîü„Åæ„Çå„ÅüÁû¨Èñì„ÄÅÁ©∫„Å´„ÅÇ„Çã10ÂÄã„ÅÆÊòüÔºàÂ§™ÈôΩ„ÉªÊúà„ÉªÊ∞¥Êòü„ÉªÈáëÊòü„ÉªÁÅ´Êòü„ÉªÊú®Êòü„ÉªÂúüÊòü„ÉªÂ§©ÁéãÊòü„ÉªÊµ∑ÁéãÊòü„ÉªÂÜ•ÁéãÊòüÔºâ„Åå„Å©„ÅÆÊòüÂ∫ß„Å´„ÅÑ„Çã„Åã„ÇíË¶ã„Åæ„Åô„ÄÇ\n\n‰æã„Åà„Å∞„ÄåÂ§™ÈôΩ„ÅØÁâ°ÁæäÂ∫ß„ÄÅÊúà„ÅØÂèåÂ≠êÂ∫ß„ÄÅ‰∏äÊòáÊòüÂ∫ß„ÅØÁçÖÂ≠êÂ∫ß„Äç„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„Åù„Çå„Åû„ÇåÈÅï„ÅÜÊòüÂ∫ß„Å´„Å™„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ„ÅÆ„Åß„Åô„ÄÇ\n\n„Åì„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„Åß„ÄÅ„ÅÇ„Å™„Åü„Å†„Åë„ÅÆË©≥„Åó„ÅÑÊÄßÊ†º„ÅåÂàÜ„Åã„Çä„Åæ„ÅôÔºÅ",
      image: "‚ú®",
      highlight: ""
    },
    {
      title: "üéØ ÊÆµÈöéÁöÑ„Å´Ë©≥„Åó„Åè„Å™„Çã",
      content: "ÊúÄÂàù„ÅØÁ∞°Âçò„Å™ÁµêÊûú„ÇíË¶ã„Å¶„ÄÅ„ÇÇ„Å£„Å®Ë©≥„Åó„ÅèÁü•„Çä„Åü„Åè„Å™„Å£„Åü„Çâ\n„ÄåË©≥„Åó„ÅÑÊòüÂ∫ßÂç†„ÅÑ„Å∏üîÆ„Äç„Äå„Éó„É≠Á¥öÊòüÂ∫ßÂç†„ÅÑüåå„Äç„Éú„Çø„É≥„ÇíÊäº„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      image: "üìä",
      highlight: ""
    },
    {
      title: "üîÑ ÁµêÊûú„Çí„É™„Çª„ÉÉ„Éà„Åó„Åü„ÅÑÊôÇ",
      content: "Âç†„ÅÑÁµêÊûú„ÇíÊúÄÂàù„Åã„Çâ„ÇÑ„ÇäÁõ¥„Åó„Åü„ÅÑÂ†¥Âêà„ÅØ„ÄÅ\n„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„ÅÆ„ÄåÈÅéÂéª„ÅÆÂç†„ÅÑÁµêÊûú„Çí„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      image: "üîÑ",
      highlight: ""
    },
    {
      title: "‚úÖ Ê∫ñÂÇôÂÆå‰∫ÜÔºÅ",
      content: "„Åì„Çå„ÅßÊ∫ñÂÇô„ÅØÂÆå‰∫Ü„Åß„Åô„ÄÇ\n„ÅÇ„Å™„Åü„Å†„Åë„ÅÆË©≥„Åó„ÅÑÊòüÂ∫ßÂç†„ÅÑ„Çí‰ΩìÈ®ì„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜÔºÅ",
      image: "üöÄ",
      highlight: ""
    }
  ];

  const nextStep = () => {
    if (currentStep < tutorialSteps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      completeTutorial();
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const completeTutorial = () => {
    localStorage.setItem('starflect_tutorial_completed', 'true');
    onClose();
  };

  const skipTutorial = () => {
    localStorage.setItem('starflect_tutorial_completed', 'true');
    onClose();
  };

  // „É¢„Éº„ÉÄ„É´„ÅÆÂ§ñÂÅ¥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÅüÊôÇ„ÅÆÂá¶ÁêÜ
  const handleModalClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  if (!isOpen) return null;

  const currentTutorialStep = tutorialSteps[currentStep];

  return (
    <div className="tutorial-modal-overlay" onClick={handleModalClick}>
      <div className="tutorial-modal">
        {/* „Éó„É≠„Ç∞„É¨„ÇπË°®Á§∫ */}
        <div className="tutorial-progress">
          <div className="progress-bar">
            <div 
              className="progress-fill" 
              style={{ width: `${((currentStep + 1) / tutorialSteps.length) * 100}%` }}
            />
          </div>
          <span className="progress-text">
            {currentStep + 1} / {tutorialSteps.length}
          </span>
        </div>

        {/* „É¢„Éº„ÉÄ„É´„Éò„ÉÉ„ÉÄ„Éº */}
        <div className="tutorial-header">
          <button 
            className="close-button"
            onClick={onClose}
            aria-label="„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„ÇíÈñâ„Åò„Çã"
          >
            √ó
          </button>
        </div>

        {/* „ÉÅ„É•„Éº„Éà„É™„Ç¢„É´ÂÜÖÂÆπ */}
        <div className="tutorial-content">
          <div className="tutorial-image">
            <span className="tutorial-icon">{currentTutorialStep.image}</span>
          </div>
          
          <div className="tutorial-text">
            <h3>{currentTutorialStep.title}</h3>
            <p>{currentTutorialStep.content}</p>
          </div>
        </div>

        {/* „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ */}
        <div className="tutorial-navigation">
          <button 
            className="nav-button secondary"
            onClick={skipTutorial}
          >
            „Çπ„Ç≠„ÉÉ„Éó
          </button>
          
          <div className="nav-buttons">
            {currentStep > 0 && (
              <button 
                className="nav-button secondary"
                onClick={prevStep}
              >
                Êàª„Çã
              </button>
            )}
            
            <button 
              className="nav-button primary"
              onClick={nextStep}
            >
              {currentStep < tutorialSteps.length - 1 ? 'Ê¨°„Å∏' : 'Âßã„ÇÅ„Çã'}
            </button>
          </div>
        </div>

        {/* „Éâ„ÉÉ„Éà„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº */}
        <div className="tutorial-dots">
          {tutorialSteps.map((_, index) => (
            <button
              key={index}
              className={`dot ${index === currentStep ? 'active' : ''}`}
              onClick={() => setCurrentStep(index)}
              aria-label={`„Çπ„ÉÜ„ÉÉ„Éó ${index + 1} „Å´ÁßªÂãï`}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default TutorialModal; 