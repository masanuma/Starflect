import React, { useState } from 'react';
import './TutorialModal.css';

interface TutorialModalProps {
  isOpen: boolean;
  onClose: () => void;
}

const TutorialModal: React.FC<TutorialModalProps> = ({ isOpen, onClose }) => {
  const [currentStep, setCurrentStep] = useState(0);
  
  const tutorialSteps = [
    {
      title: "üåü „ÅÇ„Å™„Åü„ÇÇÁü•„Å£„Å¶„Çã12ÊòüÂ∫ßÂç†„ÅÑ",
      content: "ÈõëË™å„ÇÑ„ÉÜ„É¨„Éì„ÅßË¶ã„ÇãÊòüÂ∫ßÂç†„ÅÑ„ÄÇ\n„Äå4Êúà1Êó•Áîü„Åæ„Çå„ÅØÁâ°ÁæäÂ∫ß„Äç„Åø„Åü„ÅÑ„Å´„ÄÅÁîüÂπ¥ÊúàÊó•„Åß12Á®ÆÈ°û„Å´ÂàÜ„Åã„Çå„Åæ„Åô„Çà„Å≠„ÄÇ\n\n„Åß„ÇÇ„ÄÅ„Å°„Çá„Å£„Å®ÁñëÂïè„Å´ÊÄù„ÅÑ„Åæ„Åõ„Çì„ÅãÔºü",
      image: "‚ú®",
      highlight: ""
    },
    {
      title: "ü§î Âêå„ÅòÊòüÂ∫ß„ÅÆ‰∫∫„ÅØ„Åø„Çì„Å™Âêå„ÅòÔºü",
      content: "Âêå„ÅòÁâ°ÁæäÂ∫ß„Åß„ÇÇ„ÄÅÊúùÁîü„Åæ„Çå„ÅÆ‰∫∫„Å®Â§úÁîü„Åæ„Çå„ÅÆ‰∫∫„ÄÇ\nÊù±‰∫¨Áîü„Åæ„Çå„ÅÆ‰∫∫„Å®Â§ßÈò™Áîü„Åæ„Çå„ÅÆ‰∫∫„ÄÇ\n\nÊú¨ÂΩì„Å´„Åø„Çì„Å™Âêå„ÅòÊÄßÊ†º„Åß„Åó„Çá„ÅÜ„ÅãÔºü",
      image: "ü§î",
      highlight: ""
    },
    {
      title: "üåô Ë°ùÊíÉ„ÅÆ‰∫ãÂÆüÔºöÊúàÊòüÂ∫ß„Åå„ÅÇ„Å£„ÅüÔºÅ",
      content: "ÂÆü„ÅØ„ÄåÊúàÊòüÂ∫ß„Äç„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„ÇÇ„ÅÇ„Çã„Çì„Åß„ÅôÔºÅ\n\nÁîü„Åæ„Çå„ÅüÊôÇ„Å´Êúà„Åå„Å©„ÅÆÊòüÂ∫ß„ÅÆ‰ΩçÁΩÆ„Å´„ÅÇ„Å£„Åü„Åã„Åß„ÄÅ„ÅÇ„Å™„Åü„ÅÆÊÑüÊÉÖ„ÇÑÊú¨Èü≥„ÅÆÈÉ®ÂàÜ„ÅåÊ±∫„Åæ„Çä„Åæ„Åô„ÄÇÊúà„ÅØÁ¥Ñ2ÊôÇÈñì„ÅßÊòüÂ∫ß„ÅåÂ§â„Çè„Çã„ÅÆ„Åß„ÄÅÂêå„ÅòÊó•„Å´Áîü„Åæ„Çå„Å¶„ÇÇÂá∫ÁîüÊôÇÂàª„ÅåÈÅï„Åà„Å∞ÊúàÊòüÂ∫ß„ÇÇÈÅï„ÅÜ„Çì„Åß„Åô„ÄÇ\n\n„Åì„Çå„Åå„ÄåÈö†„Çå„ÅüÊÑüÊÉÖ„ÇÑ„Éó„É©„Ç§„Éô„Éº„Éà„Å™Ëá™ÂàÜ„Äç„ÇíË°®„Åó„Åæ„Åô„ÄÇ",
      image: "üåô",
      highlight: ""
    },
    {
      title: "üåÖ „Åï„Çâ„Å´È©ö„ÅçÔºö‰∏äÊòáÊòüÂ∫ß„Åæ„ÅßÔºÅ",
      content: "„Å™„Çì„Å®„Äå‰∏äÊòáÊòüÂ∫ß„Äç„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„ÇÇ„ÅÇ„Çä„Åæ„ÅôÔºÅ\n\nÁîü„Åæ„Çå„ÅüÁû¨Èñì„Å´Êù±„ÅÆÂú∞Âπ≥Á∑ö„Åã„ÇâÊòá„Å£„Å¶„ÅÑ„ÅüÊòüÂ∫ß„Åß„ÄÅÁ¥Ñ4ÂàÜ„Åß1Â∫¶„Åö„Å§Â§â„Çè„Çä„Åæ„Åô„ÄÇÂá∫ÁîüÊôÇÂàª„Å®Âá∫ÁîüÂ†¥ÊâÄ„Å´„Çà„Å£„Å¶„Äå‰∫∫„Åã„ÇâË¶ã„ÅüÁ¨¨‰∏ÄÂç∞Ë±°„ÇÑÂ§ñË¶ãÁöÑ„Å™ÁâπÂæ¥„Äç„ÅåÊ±∫„Åæ„Çã„Çì„Åß„Åô„ÄÇ\n\nÂêå„ÅòË™ïÁîüÊó•„ÉªÂêå„ÅòÊôÇÂàª„Åß„ÇÇ„ÄÅÁîü„Åæ„Çå„ÅüÂ†¥ÊâÄ„ÅåÈÅï„Åà„Å∞‰∏äÊòáÊòüÂ∫ß„ÇÇÂ§â„Çè„Çä„Åæ„Åô„ÄÇ",
      image: "üåÖ",
      highlight: ""
    },
    {
      title: "üåå „ÇÇ„Å£„Å®Ë°ùÊíÉÔºöÊòü„ÅØ10ÂÄã„ÇÇ„ÅÇ„Å£„ÅüÔºÅ",
      content: "ÂÆü„ÅØÂç†„ÅÑ„Åß‰Ωø„ÅÜÊòü„ÅØ10ÂÄã„ÇÇ„ÅÇ„Çã„Çì„Åß„ÅôÔºÅ\nÂ§™ÈôΩ„ÉªÊúà„ÉªÊ∞¥Êòü„ÉªÈáëÊòü„ÉªÁÅ´Êòü„ÉªÊú®Êòü„ÉªÂúüÊòü„ÉªÂ§©ÁéãÊòü„ÉªÊµ∑ÁéãÊòü„ÉªÂÜ•ÁéãÊòü„ÄÇ\n\nÁîü„Åæ„Çå„ÅüÁû¨Èñì„Å´„ÄÅ„Åì„Çå„Çâ10ÂÄã„ÅÆÂ§©‰Ωì„Åå„Åù„Çå„Åû„Çå„Å©„ÅÆÊòüÂ∫ß„ÅÆ‰ΩçÁΩÆ„Å´„ÅÇ„Å£„Åü„Åã„Åß„ÄÅ„ÅÇ„Å™„Åü„ÅÆÊÄßÊ†º„ÅÆÈÅï„ÅÜÈù¢„ÇíË°®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÊôÇÂàª„Å®Â†¥ÊâÄ„ÅåÂàÜ„Åã„Çã„Åì„Å®„Åß„ÄÅÊ≠£Á¢∫„Å™Â§©‰Ωì„ÅÆ‰ΩçÁΩÆ„ÅåË®àÁÆó„Åß„Åç„Çã„Çì„Åß„Åô„ÄÇ",
      image: "üåå",
      highlight: ""
    },
    {
      title: "üò≤ „Å†„Åã„ÇâÊï∞Áôæ‰∏áÈÄö„Çä„Å´„Å™„ÇãÔºÅ",
      content: "„Åì„Çå„ÅßË¨é„ÅåËß£„Åë„Åæ„Åó„ÅüÔºÅ\n\nÊôÆÈÄö„ÅÆÊòüÂ∫ßÂç†„ÅÑÔºöÂ§™ÈôΩÊòüÂ∫ß„Å†„ÅëÔºà12Á®ÆÈ°ûÔºâ\nStarflectÔºö10ÂÄã„ÅÆÊòü√ó12ÊòüÂ∫ß„ÅÆÁµÑ„ÅøÂêà„Çè„ÅõÔºàÊï∞Áôæ‰∏áÈÄö„ÇäÔºâ\n\nÁîü„Åæ„Çå„ÅüÁû¨Èñì„ÅÆÊòü„ÅÆÈÖçÁΩÆ„Åå„ÅÇ„Å™„Åü„Å†„Åë„ÅÆÂÄãÊÄß„Çí‰Ωú„ÇäÂá∫„Åó„Åæ„Åô„ÄÇ„Å†„Åã„Çâ„Åì„Çì„Å™„Å´Ë©≥„Åó„ÅÑÂç†„ÅÑÁµêÊûú„ÅåÂàÜ„Åã„Çã„Çì„Åß„ÅôÔºÅ",
      image: "üí°",
      highlight: ""
    },
    {
      title: "ü§ñ AI„Åß„ÇÇ„Å£„Å®Ê∑±Êéò„Çä„Åß„Åç„Çã",
      content: "„Åï„Çâ„Å´ÔºÅ„Å©„ÅÆÂç†„ÅÑÁµêÊûú„Åß„ÇÇ„ÄÅAIÂç†„ÅÑÂ∏´„Å®„ÉÅ„É£„ÉÉ„Éà„Åß„Åç„Åæ„Åô„ÄÇ\n\n„ÄåÊÅãÊÑõÈÅã„Å´„Å§„ÅÑ„Å¶„ÇÇ„Å£„Å®Ë©≥„Åó„Åè„Äç\n„Äå‰ªï‰∫ã„ÅÆÊÇ©„Åø„ÇíÁõ∏Ë´á„Åó„Åü„ÅÑ„Äç\n\n‰Ωï„Åß„ÇÇËÅû„ÅÑ„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑÔºÅ",
      image: "ü§ñ",
      highlight: ""
    },
    {
      title: "üì± ‰Ωø„ÅÑÊñπ„ÅØÁ∞°ÂçòÔºÅ",
      content: "3„Å§„ÅÆ„É¢„Éº„Éâ„Åã„ÇâÈÅ∏„Çì„Åß„Åè„Å†„Åï„ÅÑÔºö\n\nüåü „ÅäÊâãËªΩÔºöÁîüÂπ¥ÊúàÊó•„Å†„Åë„Åß30Áßí\nüåô Ë©≥„Åó„ÅÑÔºöÊôÇÂàª„ÉªÂ†¥ÊâÄ„ÇÇ‰Ωø„Å£„Å¶1ÂàÜ\nüåå „Éó„É≠Á¥öÔºöÂÖ®ÈÉ®„ÅÆÊòü„ÅßÊúÄÈ´òÁ≤æÂ∫¶\n\nËø∑„Å£„Åü„Çâ„Äå„ÅäÊâãËªΩ„Äç„Åã„ÇâÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜÔºÅ",
      image: "üìä",
      highlight: ".mode-cards"
    },
    {
      title: "üîÑ ÁµêÊûú„Çí„ÇÑ„ÇäÁõ¥„Åó„Åü„ÅÑÊôÇ„ÅØ",
      content: "Âç†„ÅÑÁµêÊûú„ÇíÊúÄÂàù„Åã„Çâ„ÇÑ„ÇäÁõ¥„Åó„Åü„ÅÑÂ†¥Âêà„ÅØ„ÄÅ\n„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„ÅÆ„ÄåÈÅéÂéª„ÅÆÂç†„ÅÑÁµêÊûú„Çí„ÇØ„É™„Ç¢„Äç„Éú„Çø„É≥„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\nÂü∫Êú¨ÊÉÖÂ†±„ÅØ‰øùÊåÅ„Åï„Çå„Çã„ÅÆ„Åß„ÄÅ„Åô„Åê„Å´Êñ∞„Åó„ÅÑÂç†„ÅÑ„ÇíÂßã„ÇÅ„Çâ„Çå„Åæ„ÅôÔºÅ",
      image: "üîÑ",
      highlight: ""
    },
    {
      title: "‚úÖ „Åï„ÅÇ„ÄÅ„ÅÇ„Å™„Åü„Å†„Åë„ÅÆÂç†„ÅÑ„ÇíÔºÅ",
      content: "ÊôÆÈÄö„ÅÆ12Á®ÆÈ°û„Åã„ÇâÊï∞Áôæ‰∏áÈÄö„Çä„ÅÆÁ≤æÂ∫¶„Å∏ÔºÅ\n\n„ÅÇ„Å™„Åü„Å†„Åë„ÅÆË©≥„Åó„ÅÑÊòüÂ∫ßÂç†„ÅÑ„Çí‰ΩìÈ®ì„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜÔºÅ",
      image: "üöÄ",
      highlight: ""
    }
  ];

  const nextStep = () => {
    if (currentStep < tutorialSteps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      completeTutorial();
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const completeTutorial = () => {
    localStorage.setItem('starflect_tutorial_completed', 'true');
    onClose();
  };

  const skipTutorial = () => {
    localStorage.setItem('starflect_tutorial_completed', 'true');
    onClose();
  };

  // „É¢„Éº„ÉÄ„É´„ÅÆÂ§ñÂÅ¥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÅüÊôÇ„ÅÆÂá¶ÁêÜ
  const handleModalClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  if (!isOpen) return null;

  const currentTutorialStep = tutorialSteps[currentStep];

  return (
    <div className="tutorial-modal-overlay" onClick={handleModalClick}>
      <div className="tutorial-modal">
        {/* „Éó„É≠„Ç∞„É¨„ÇπË°®Á§∫ */}
        <div className="tutorial-progress">
          <div className="progress-bar">
            <div 
              className="progress-fill" 
              style={{ width: `${((currentStep + 1) / tutorialSteps.length) * 100}%` }}
            />
          </div>
          <span className="progress-text">
            {currentStep + 1} / {tutorialSteps.length}
          </span>
        </div>

        {/* „É¢„Éº„ÉÄ„É´„Éò„ÉÉ„ÉÄ„Éº */}
        <div className="tutorial-header">
          <button 
            className="close-button"
            onClick={onClose}
            aria-label="„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„ÇíÈñâ„Åò„Çã"
          >
            √ó
          </button>
        </div>

        {/* „ÉÅ„É•„Éº„Éà„É™„Ç¢„É´ÂÜÖÂÆπ */}
        <div className="tutorial-content">
          <div className="tutorial-image">
            <span className="tutorial-icon">{currentTutorialStep.image}</span>
          </div>
          
          <div className="tutorial-text">
            <h3>{currentTutorialStep.title}</h3>
            <p>{currentTutorialStep.content}</p>
          </div>
        </div>

        {/* „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ */}
        <div className="tutorial-navigation">
          <button 
            className="nav-button secondary"
            onClick={skipTutorial}
          >
            „Çπ„Ç≠„ÉÉ„Éó
          </button>
          
          <div className="nav-buttons">
            {currentStep > 0 && (
              <button 
                className="nav-button secondary"
                onClick={prevStep}
              >
                Êàª„Çã
              </button>
            )}
            
            <button 
              className="nav-button primary"
              onClick={nextStep}
            >
              {currentStep < tutorialSteps.length - 1 ? 'Ê¨°„Å∏' : 'Âßã„ÇÅ„Çã'}
            </button>
          </div>
        </div>

        {/* „Éâ„ÉÉ„Éà„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº */}
        <div className="tutorial-dots">
          {tutorialSteps.map((_, index) => (
            <button
              key={index}
              className={`dot ${index === currentStep ? 'active' : ''}`}
              onClick={() => setCurrentStep(index)}
              aria-label={`„Çπ„ÉÜ„ÉÉ„Éó ${index + 1} „Å´ÁßªÂãï`}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default TutorialModal; 